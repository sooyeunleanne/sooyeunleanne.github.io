{
    "Foodieco": {
        "logo": "foodieco.png",
        "screenshot": "foodieco.png",
        "name": "Foodieco",
        "techStack": ["Python", "Tkinter"],
        "competition": "Highlander Engineering Challenge",
        "date": "2022/06",
        "award": "Best Software Project",
        "point": "An app that provides a full view of fridge items and suggests possible replacements for certain ingredients in a 4-people team.",
        "description": "Foodieco was my <b>first official competitive software project</b>, built for the Highlander Engineering Challenge in a team of four. We developed an application that helps users manage their fridge by tracking items and suggesting ingredient replacements. It was not only a chance to explore both front-end and back-end development with Python and Tkinter, but also my first real experience programming collaboratively with friends. This project showed me how fun it is to <b>code as a team</b>, and gave me a lasting sense of accomplishment from seeing an idea through to a finished product.",
        "devpostLink": "https://devpost.com/software/foodieco"
    },
    "Body In Depth": {
        "logo": "bodyindepth.png",
        "screenshot": "bodyindepth.png",
        "name": "Body In Depth",
        "techStack": ["Java", "Processing"],
        "date": "2023/02",
        "point": "Engineered a body composition analysis calculator that plans out a dietary plan for weight loss/gain.",
        "description": "This project was my <b>Grade 12 Computer Science final project</b>, where I solo-engineered a <b>body composition analysis calculator</b> that generates a personalized dietary plan for weight loss or gain. It was my <b>first experience building a health-related application</b>, and I developed it entirely on my own as a <b>full-stack developer</b>. I implemented the app using <b>Processing</b>, a graphical library based on Java, applying <b>object-oriented programming (OOP)</b> principles to structure and organize the code. This project taught me how to combine computational logic with user-centered design to create a practical, interactive tool.",
        "githubLink": "https://github.com/sooyeunleanne/Body-In-Depth"
    },
    "ReadBetter": {
        "logo": "readbetter.png",
        "screenshot": "readbetter.png",
        "name": "ReadBetter",
        "competition": "JamHacks 7",
        "techStack": ["Python", "Flask"],
        "date": "2023/06",
        "award": "Runner-up for Best University Hacks",
        "point": "A Flask application to assist people in reading by providing artificial fixation points, using integrations of assemblyai, pypdf2, and EasyOCR.",
        "description": "This project is a <b>Flask application</b> designed to assist users in reading by providing <b>artificial fixation points</b>. I integrated <b>AssemblyAI</b> for audio processing, <b>PyPDF2</b> for PDF handling, and <b>EasyOCR</b> for text recognition, enabling the app to process and guide reading materials efficiently. During a reading efficiency experiment, users experienced an average <b>35% decrease in total reading time</b>, demonstrating the practical impact of combining AI and OCR technologies to enhance reading performance.",
        "devpostLink": "https://devpost.com/software/bet-you-can-read-it-better-like-this-readbetter"
    },
    "AppMatch Maker": {
        "name": "AppMatch Maker",
        "screenshot": "opshackathon.jpg",
        "competition": "OPS Phenomenal Hackathon with Microsoft",
        "techStack": ["MS Forms", "Power BI", "Power Automate", "Dataverse"],
        "date": "2024/03",
        "award": "Eureka Moment Award",
        "point": "A software prototype using MS Forms, Power BI, Power Automate, and Dataverse to scan the technology landscape across the Ontario Public Service and identify opportunities to reuse existing applications.",
        "description": "For this project, I created a <b>software prototype</b> that analyzes the Ontario Public Service technology environment to uncover opportunities for <b>application reuse</b>. By leveraging <b>MS Forms, Power BI, Power Automate, and Dataverse</b>, the prototype can quickly identify redundant solutions, streamline decision-making, and reduce time, resources, and finances spent on building new IT solutions by an estimated <b>30%</b>. Additionally, I prepared and delivered a comprehensive pitch detailing the problem statement, business impact, target users, proposed solution, technology stack, and a roadmap for future development."
    },
    "St. Paul Chung Parish Official Website": {
        "logo": "stpaulchungparish.jpg",
        "screenshot": "stpaulchungparish.png",
        "competition": "St. Paul Chung Parish",
        "name": "St. Paul Chung Parish Official Website",
        "techStack": ["Wix"],
        "role": "Web Developer / Manager",
        "date": "2024/11",
        "point": "Managed and improved the <b>parish website</b> on Wix, increasing weekly traffic by <b>150%</b> and enhancing <b>community engagement</b> through accessible design and timely updates.",
        "description": "I developed and maintained the <b>parish website</b> on Wix, focusing on <b>accessibility, design, and user engagement</b>. By posting important notices, event updates, and photos, I helped streamline communication within the community. Collaborating closely with parish leaders ensured that content was accurate, timely, and aligned with the church’s mission, resulting in a <b>150% increase in weekly visitors</b> to 200–300 viewers.",
        "link": "https://www.stpaulchung.ca/"
    },
    "AKCSE UW Official Website": {
        "logo": "akcseuw.png",
        "screenshot": "akcseuw.png",
        "name": "AKCSE UW Official Website",
        "techStack": ["React", "Express", "MongoDB", "Node.js"],
        "date": "2025/08",
        "point": "Led <b>full-stack development</b> of the Admin Portal and core public pages using <b>ReactJS, Express.js, MongoDB, and Node.js</b>, implementing <b>CI/CD pipelines</b> for seamless deployment on <b>Netlify</b> and <b>Render</b>.",
        "description": "I <b>led the full-stack development</b> of the Admin Portal, enabling management of team information, member settings, and event/news hashtags. I also built and launched three core public pages — <b>landing, team, and contacts</b> — improving <b>accessibility</b> and <b>community engagement</b>. To streamline deployment, I implemented a <b>CI/CD pipeline</b> and deployed the applications on <b>Netlify</b> and <b>Render</b>, ensuring fast and reliable updates.",
        "link": "https://www.akcseuw.ca/"
    },
    "Watguessr.io": {
        "logo": "watguessrio.png",
        "screenshot": "watguessrio.png",
        "name": "Watguessr.io",
        "techStack": ["Vue", "SpringBoot", "PostgreSQL", "Node.js"],
        "date": "2025/08",
        "point": "Developed <b>full-stack game features</b> with <b>real-time multiplayer</b>, <b>secure authentication</b>, interactive <b>map integrations</b>, and optimized <b>deployment pipelines</b>.",
        "description": "<ul><li>Built <b>gameflows</b> for <b>singleplayer, multiplayer, and ranked modes</b>, leveraging <b>WebSockets</b> for <b>real-time connections</b> and <b>player state synchronization</b>.</li><li>Implemented <b>JWT authentication</b> and <b>secure HTTP cookies</b>, strengthening <b>user security protocols</b>.</li><li>Developed the <b>frontend</b> with <b>Mapbox API</b> integrations, enhancing <b>interactive map-based gameplay</b>.</li><li>Optimized <b>building detection</b> using <b>OSM API</b> with <b>IndexedDB caching</b>, reducing round load time from 3s to ~1s (<b>67% faster</b>).</li><li>Automated <b>image upload pipeline</b> with <b>Python</b> and <b>AWS S3</b>, cutting deployment preparation from 3+ hours to 20 minutes.</li></ul>",
        "link": "https://watguessr.io/"
    }
}